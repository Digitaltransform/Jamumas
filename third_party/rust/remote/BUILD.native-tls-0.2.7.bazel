"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/rust", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT OR Apache-2.0"
])

# Generated Targets

# Unsupported target "build-script-build" with type "custom-build" omitted

# Unsupported target "google-connect" with type "example" omitted

# Unsupported target "simple-server" with type "example" omitted

rust_library(
    name = "native_tls",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2015",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.2.7",
    # buildifier: leave-alone
    deps = [
    ] + selects.with_or({
        # cfg(any(target_os = "macos", target_os = "ios"))
        (
            "@rules_rust//rust/platform:x86_64-apple-darwin",
        ): [
            "@raze__lazy_static__1_4_0//:lazy_static",
            "@raze__libc__0_2_80//:libc",
            "@raze__security_framework__2_0_0//:security_framework",
            "@raze__security_framework_sys__2_0_0//:security_framework_sys",
            "@raze__tempfile__3_1_0//:tempfile",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
        (
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__log__0_4_11//:log",
            "@raze__openssl__0_10_32//:openssl",
            "@raze__openssl_probe__0_1_2//:openssl_probe",
            "@raze__openssl_sys__0_9_60//:openssl_sys",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(target_os = "windows")
        (
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "@raze__schannel__0_1_19//:schannel",
        ],
        "//conditions:default": [],
    }),
)
